---
import "@/components/../styles/markdown-styles.css";
import "highlight.js/styles/agate.css";
import RootLayout from "../../../layouts/RootLayout.astro";
import DOMPurify from "isomorphic-dompurify";
import markdownConvert from "@/libs/markdown";
import { Image } from "astro:assets";
import { CLOUDFRONT_URL } from "@/data/constants";
import BackArrow from "@/components/UI/icons/backArrow.astro";
import { getBlogs } from "@/libs/db/blog/queries";
import { type SelectBlog } from "@/libs/db/blog/table";
export async function getStaticPaths() {
  const blogs = await getBlogs();
  if (blogs) {
    return blogs.map((blog) => ({
      params: { slug: blog.slug },
      props: blog,
    }));
  } else {
    console.error("FAILED TO PARSE BLOGS");
    return [];
  }
}
type Props = SelectBlog;

const blog = Astro.props;

const blogHtml = await markdownConvert(blog.blogContent);
const blogContent = DOMPurify.sanitize(blogHtml.toString());

export const prerender = true;
const arr = blog.imageKey.split(".");
const imageId = arr[0];
---

<RootLayout
  imageUrl={`${CLOUDFRONT_URL}/${imageId}_800x.webp`}
  title={blog.title}
  description={blog.description}
>
  <div class="w-full pt-10">
    <div class="mx-auto px-4 lg:px-0 lg:w-[840px]">
      <div class="flex pb-2">
        <a href="/blog" class="">
          <div
            class="text-blue-400 group rounded-sm px-3 py-1 border border-gray-100"
          >
            <BackArrow />
          </div>
        </a>
      </div>

      <h1 class="text-center font-bold text-4xl py-2 e">
        {blog.title}
      </h1>

      <p class="text-center pb-2 text-lg text-gray-300">
        {blog.description}
      </p>
      <div class="py-2 flex justify-center">
        <div
          class="flex w-[300px] lg:w-full justify-center"
        >
          <Image
            loading={"eager"}
            width={800}
            height={400}
            class="object-contain border border-gray-400 rounded-md"
            src={`${CLOUDFRONT_URL}/${imageId}_800x.webp`}
            alt={blog.title}
          />
        </div>
      </div>
      <h2 class="text-gray-400 text-sm text-right">
        {
          Intl.DateTimeFormat("en-US", {
            year: "numeric",
            month: "long",
            day: "numeric",
          }).format(new Date(parseInt(blog.createdAt)))
        }
      </h2>
      <div class="py-2 markdown-body p-2">
        <div set:html={blogContent} />
      </div>
    </div>
  </div>
  <!-- <BlogPost {...blog}> -->
  <!-- </BlogPost> -->
</RootLayout>
