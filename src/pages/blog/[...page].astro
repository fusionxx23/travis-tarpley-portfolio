---
import RootLayout from "../../layouts/RootLayout.astro";
import Header from "../../components/Header.astro";
import Pagination from "@/components/UI/Pagination.astro";
import BlogList from "@/components/Blog/BlogList.astro";
import {
  getPublishedBlogs,
  getTotalAmountOfBlogs,
} from "../../libs/blogs/index";
import { type SelectBlog } from "../../libs/models";
interface Props {
  blogs: SelectBlog[];
  pages: number;
}
export async function getStaticPaths() {
  let blogPage: SelectBlog[][] = [];
  const total = await getTotalAmountOfBlogs();
  console.log(total.data);
  let offset = 0;
  while (true) {
    const blogs = await getPublishedBlogs(offset);
    blogPage.push(blogs);
    offset += 10;
    if (blogs.length < 10) {
      break;
    }
  }
  if (!total.success) {
    console.error(
      "Failed to parse total blog posts amount. ",
    );
  }
  // Default to 0 if there was an error
  let count = total.data?.["COUNT(*)"] ?? 0;
  let pages = 1;
  if (count > 10) {
    pages = Math.floor(count / 10);
  }
  return blogPage.map((blogs, ind) => {
    return {
      params: {
        page: (ind + 1).toString(),
      },
      props: { blogs, pages },
    };
  });
}
const { blogs, pages } = Astro.props;
const { page } = Astro.params;
export const prerender = true;
---

<RootLayout title="Travis Tarpley | Blog">
  <div class="pt-[60px]"></div>
  <main class="flex justify-center">
    <section class="">
      <h1 class="text-3xl py-4 text-gray-100 font-semibold">
        My Latest Posts
      </h1>

      <BlogList blogs={blogs} />
      <Pagination
        currentPage={parseInt(page)}
        totalPage={pages}
      />
    </section>
  </main>
</RootLayout>

<Header />
