---

---

<div class="b"></div>
<style>
  .b {
    margin: 0;
    height: 100vh;
  }

  canvas {
    display: block;
    position: absolute;
    top: 0;
  }
</style>
<script>
  import * as THREE from "three";
  import { FontLoader, TextGeometry } from "three/examples/jsm/Addons.js";
  import font from "three/examples/fonts/helvetiker_regular.typeface.json";
  import { Loader } from "three/src/loaders/Loader.js";
  const w = window.innerWidth;
  const h = window.innerHeight;

  const renderer = new THREE.WebGLRenderer({ antialias: true });
  renderer.setSize(300, 300);
  document.body.appendChild(renderer.domElement);

  const fov = 75;
  const aspect = 1;
  const near = 0.5;
  const far = 10;
  const camera = new THREE.PerspectiveCamera(fov, aspect, near, far);
  camera.position.z = 2;

  const scene = new THREE.Scene();
  const loader = new FontLoader();
  loader.load("/helvetiker_regular.typeface.json", function (font: any) {
    const geometry = new TextGeometry("TT", {
      font: font,
      size: 0.8,
      height: 0.25,
      curveSegments: 8,
      bevelEnabled: true,
      bevelThickness: 0.01,
      bevelSize: 0.025,
      bevelOffset: 0,
      bevelSegments: 2,
    });
    geometry.center();
    // material, mesh
    const material = new THREE.MeshNormalMaterial();
    const mesh = new THREE.Mesh(geometry, material);
    scene.add(mesh);
    // render
    camera.position.set(0, 0, 5);
    camera.lookAt(0, 0, 0);
    function animate(t = 0) {
      requestAnimationFrame(animate);
      mesh.rotation.y = t * 0.001;

      renderer.render(scene, camera);
    }
    animate();
  });
</script>
