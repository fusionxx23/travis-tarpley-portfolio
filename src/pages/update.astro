---
import RootLayout from "../layouts/RootLayout.astro";
import { Image } from "astro:assets";
import { DB_API_URL, BEARER } from "../data/constants";
import { remark } from "remark";
import remarkHtml from "remark-html";
import remarkGfm from "remark-gfm";
import DOMPurify from "isomorphic-dompurify";
import BackArrow from "../components/UI/icons/backArrow.astro";
import Updater from "../components/Blog/Updater.svelte";
import { getBlogs } from "../libs/blogs/index";
import { type SelectBlog } from "../libs/models/index.ts";
export async function getStaticPaths() {
  const blogs = await getBlogs();
  console.log(blogs);
  if (blogs) {
    return blogs.map((blog) => ({
      params: { slug: blog.slug },
      props: blog,
    }));
  } else {
    console.error("FAILED TO PARSE BLOGS");
    return [];
  }
}
type Props = SelectBlog;

const blog = Astro.props;

const blogHtml = await remark()
  .use(remarkGfm)
  .use(remarkHtml)
  .process(blog.blogContent);
export const prerender = true;
console.log(blog, "BLOG");
---

<RootLayout>
  <Updater blog={blog} client:load />
</RootLayout>
